#!/usr/bin/env python3

import datetime, os, sys, time
assert len(sys.argv)>1, "At least one argument required"
if any([h in sys.argv for h in ["-h","--help"]]):
  print("Plots histogram of modification times for one or more given directories. Requires at least one argument, the directory to be recursively searched. stdout is path to the plot generated.")
  sys.exit()
from matplotlib import use
use("pdf") 
import matplotlib.pyplot as plt

paths = sys.argv[1:]
mtimes = []

for PATH in paths:
  filelist = [os.path.join(dp, f) for dp, dn, filenames in os.walk(PATH) for f in filenames]
  mtimes += [os.path.getmtime(f) for f in filelist]

f = plt.figure(figsize=(12,5))
ax = f.add_subplot(111)
ax.hist(mtimes,bins=int((max(mtimes)-min(mtimes))/600))
xstarttime = int(datetime.datetime.strptime(datetime.datetime.fromtimestamp(min(mtimes)).strftime("%Y%m%d-%H00"),"%Y%m%d-%H%M").strftime("%s"))
xtickstride = 1800
xtimes = [xstarttime+(x*xtickstride) for x in range(2+int((max(mtimes)-min(mtimes))/xtickstride))]
ax.set_xticks(xtimes)
ax.set_xticklabels([datetime.datetime.fromtimestamp(float(x)).strftime("%Y%m%d-%H%M") for x in xtimes])
plt.xticks(rotation=90)
plt.ylabel("Number of files")
plt.title("\n".join(paths))


outname = "/tmp/"+str(time.time())+str(os.getpid())+".pdf"
f.set_tight_layout(True)
f.savefig(outname)
print(outname)
